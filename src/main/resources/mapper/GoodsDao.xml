<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cty.dao.GoodsDao" >
  <resultMap id="BaseResultMap" type="com.cty.entity.Goods" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="provider" property="provider" jdbcType="VARCHAR" />
    <result column="good_name" property="goodName" jdbcType="VARCHAR" />
    <result column="good_code" property="goodCode" jdbcType="VARCHAR" />
    <result column="expiry_date" property="expiryDate" jdbcType="TIMESTAMP" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="kind" property="kind" jdbcType="VARCHAR" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="note" property="note" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, provider, good_name, good_code, expiry_date, unit, kind, place, price, note
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cty.entity.GoodsQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from smbms_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    id,provider,good_name,good_code,expiry_date,unit,kind,place,price,note
    from smbms_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from smbms_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cty.entity.GoodsQuery" >
    delete from smbms_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cty.entity.Goods" >
    insert into smbms_goods (id, provider, good_name, 
      good_code, expiry_date, unit, 
      kind, place, price, 
      note)
    values (#{id,jdbcType=BIGINT}, #{provider,jdbcType=VARCHAR}, #{goodName,jdbcType=VARCHAR}, 
      #{goodCode,jdbcType=VARCHAR}, #{expiryDate,jdbcType=TIMESTAMP}, #{unit,jdbcType=VARCHAR}, 
      #{kind,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cty.entity.Goods" >
    insert into smbms_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="provider != null" >
        provider,
      </if>
      <if test="goodName != null" >
        good_name,
      </if>
      <if test="goodCode != null" >
        good_code,
      </if>
      <if test="expiryDate != null" >
        expiry_date,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="kind != null" >
        kind,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="provider != null" >
        #{provider,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null" >
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodCode != null" >
        #{goodCode,jdbcType=VARCHAR},
      </if>
      <if test="expiryDate != null" >
        #{expiryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        #{kind,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cty.entity.GoodsQuery" resultType="java.lang.Integer" >
    select count(*) from smbms_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update smbms_goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.provider != null" >
        provider = #{record.provider,jdbcType=VARCHAR},
      </if>
      <if test="record.goodName != null" >
        good_name = #{record.goodName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodCode != null" >
        good_code = #{record.goodCode,jdbcType=VARCHAR},
      </if>
      <if test="record.expiryDate != null" >
        expiry_date = #{record.expiryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.kind != null" >
        kind = #{record.kind,jdbcType=VARCHAR},
      </if>
      <if test="record.place != null" >
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update smbms_goods
    set id = #{record.id,jdbcType=BIGINT},
      provider = #{record.provider,jdbcType=VARCHAR},
      good_name = #{record.goodName,jdbcType=VARCHAR},
      good_code = #{record.goodCode,jdbcType=VARCHAR},
      expiry_date = #{record.expiryDate,jdbcType=TIMESTAMP},
      unit = #{record.unit,jdbcType=VARCHAR},
      kind = #{record.kind,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cty.entity.Goods" >
    update smbms_goods
    <set >
      <if test="provider != null" >
        provider = #{provider,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null" >
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="goodCode != null" >
        good_code = #{goodCode,jdbcType=VARCHAR},
      </if>
      <if test="expiryDate != null" >
        expiry_date = #{expiryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        kind = #{kind,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cty.entity.Goods" >
    update smbms_goods
    set provider = #{provider,jdbcType=VARCHAR},
      good_name = #{goodName,jdbcType=VARCHAR},
      good_code = #{goodCode,jdbcType=VARCHAR},
      expiry_date = #{expiryDate,jdbcType=TIMESTAMP},
      unit = #{unit,jdbcType=VARCHAR},
      kind = #{kind,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>